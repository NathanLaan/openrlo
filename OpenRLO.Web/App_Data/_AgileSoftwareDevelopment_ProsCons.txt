There are a number of pros and cons associated with agile software development. Here are a few of them.


### Advantages
**Better Software**

The primary advantage of agile software development is the ability to produce better software, with fewer defects, at a lower cost, and with better business engagement ([Harvey, 2004][4]; [Lindstrom, & Jeffries, 2004][5]; [Newkirk, 2002][6]).

**Flexibility & Scope Management**

Because agile software development focuses on being prepared for change, teams are more flexible and better able to assess and evaluate change ([Adkins, 2010][1]). In addition, because teams are prepared for change, scope management can become easier to deal with ([Augustine, 2005][2]).


### Disadvantages

**Physical Location**

Agile software development has strong physical requirements in the sense that it calls for close interaction between all team members. The creators of the agile manifesto feel that that close collaboration.is not possible when team members are physically separated, or working remotely. This is an acknowledgement of the physical components of human communication. This means that fully utilizing agile is not possible in a virtual team environment without the use of technology such as virtual presence or video conferencing, and even then, some of the value of agile is lost ([Augustine, 2005][2]).

**Stakeholder Buy-in**

It can often be difficult for stakeholders to commit to utilising agile software development techniques. In particular, the rapid change associated with agile can causes issues for clients and users, who may not be accustomed to, or able to keep up with the pace of change ([Adkins, 2010][1]; [Augustine, 2005][2]). Additionally, the agile values and principles call for close collaboration between the business and development teams, which can be problematic or cost-prohibitive for systems whose users are located remotely, or even spread out throughout the entire world ([Koch, 2004][4]).



[1]: # "Adkins, L. (2010). Coaching Agile Teams. Addison-Wesley ISBN: 0321637704"
[2]: # "Augustine, S. (2005). Managing Agile Projects. *Prentice Hall*. Upper Saddle River, NJ, USA. ISBN:0131240714"
[3]: # "Harvey, D. (2004). Lean, Agile. The Software Value Stream. OT 2004 Workshop"
[4]: # "Koch, S. (2004). Agile Principles and Open Source Software Development: A Theoretical and Empirical Discussion. Extreme Programming and Agile Processes in Software Engineering. Lecture Notes in Computer Science, Vol. 3092, No. 1, p. 85-93"
[5]: # "Lindstrom, L., & Jeffries, R. (2004). Extreme Programming and Agile Software Development Methodologies. Information Systems Management, Vol. 21, No. 3"
[6]: # "Newkirk, J. (2002). Introduction to agile processes and extreme programming. ICSE 2002 Proceedings of the 24th International Conference on Software Engineering. ISBN:1-58113-472-X"