The [Agile Manifesto][1] defines agile software development as being a series of [4 core values][1], and [12 guiding principles][2] whose purpose is to provide a better way of developing software.

Agile software development is a broad term that encompasses a number of different, but similar, methodologies, such as SCRUM, Extreme Programming, and the Adaptive Software Development process ([Larman, 2004][3]). In fact, agile software development is really a collection of *ideas* and *values* that that are more concerned with the end result rather than rigid adherence to specific processes ([Highsmith, 2001][4]).

[1]: http://agilemanifesto.org/ "Beck, K. et al. (2001). Manifesto for Agile Software Development. http://agilemanifesto.org Retrieved Oct 24 2011"
[2]: http://agilemanifesto.org/principles.html "Beck, K. et al. (2001). Principles behind the Agile Manifesto. http://agilemanifesto.org Retrieved Oct 24 2011"
[3]: # "Larman, C. (2004) Agile and Iterative Development: A Manager's Guide. Addison-Wesley. p. 27. ISBN 978-0-13-111155-4"
[4]: http://agilemanifesto.org/history.html "Highsmith, J. (2001). History: The Agile Manifesto. http://agilemanifesto.org/history.html Retrieved Nov 23 2011"